<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leah&#39;s apprenticeship</title>
    <link>https://leahchung.netlify.com/</link>
    <description>Recent content on Leah&#39;s apprenticeship</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Jul 2019 12:50:23 +0200</lastBuildDate>
    
        <atom:link href="https://leahchung.netlify.com/rss.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog 16: New plans</title>
      <link>https://leahchung.netlify.com/posts/day16/</link>
      <pubDate>Wed, 17 Jul 2019 12:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day16/</guid>
      <description>For some reason, the task of blogging has totally escaped me the past couple of days. I&amp;rsquo;ve completed the Haskell chapters on recursion and lists, and I feel pretty accomplished! I&amp;rsquo;m currently learning about folding lists, which is not as pleasant. Here&amp;rsquo;s an exercise from the book: The following fold has an error. Fix it and then test it in your REPL. foldr const &amp;lsquo;a&amp;rsquo; [1..5]
If we check the type of const (a function that takes two arguments and returns the first), we get: const :: a -&amp;gt; b -&amp;gt; a Now, let&amp;rsquo;s check the type of foldr: foldr :: Foldable t =&amp;gt; (a -&amp;gt; b -&amp;gt; b) -&amp;gt; b -&amp;gt; t a -&amp;gt; b Do you see the problem?</description>
    </item>
    
    <item>
      <title>Day 15: Meetings galore</title>
      <link>https://leahchung.netlify.com/posts/day15/</link>
      <pubDate>Fri, 12 Jul 2019 12:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day15/</guid>
      <description>Today was filled with meetings. I had the daily, the &amp;ldquo;Blindspot&amp;rdquo; meeting with Alvaro and his whole group of people of which he&amp;rsquo;s the PPM (not sure what to call this group), a meeting with Ugurcan concerning the setup of the Heartbeat project on my machine, a meeting with Wolfram, and my one-on-one with Alvaro. As a result, my Haskell book has collected (virtual) dust. I spent a lot of my non-meeting time with the Elevator Saga again.</description>
    </item>
    
    <item>
      <title>Day 14: Errors, Errors, go away</title>
      <link>https://leahchung.netlify.com/posts/day14/</link>
      <pubDate>Thu, 11 Jul 2019 12:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day14/</guid>
      <description>My day started normally with a long hike to work, a daily, and a kata. Today, Wolfram joined the kata, but neither Masha nor Kay could join and Markus had to leave early. Our current kata does not involve TDD (ðŸ˜±). The problem is called &amp;ldquo;Elevator Saga.&amp;rdquo; Each level provides a task to move x amount of people in some amount of time, using only a certain number of elevators. The simulator is the main source of testing, which provides random input to test your solution.</description>
    </item>
    
    <item>
      <title>Days 12 &amp; 13: Homework</title>
      <link>https://leahchung.netlify.com/posts/day12/</link>
      <pubDate>Wed, 10 Jul 2019 12:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day12/</guid>
      <description>Yesterday I spent my time completing the bash tutorial and going through the Haskell book. Here is something I came accross in the Haskell book yesterday, regarding function composition: &amp;ldquo;(.) :: [1](b -&amp;gt; c) -&amp;gt; [2](a -&amp;gt; b) -&amp;gt; [3](a -&amp;gt; c) In English:
1. given a function b to c
2. given a function a to b
3. return a function a to c The result of (a -&amp;gt; b) is the argument of (b -&amp;gt; c) so this is how we get from an a argument to a c result.</description>
    </item>
    
    <item>
      <title>Day 11: The fourth week already?!?!</title>
      <link>https://leahchung.netlify.com/posts/day11/</link>
      <pubDate>Mon, 08 Jul 2019 04:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day11/</guid>
      <description>It&amp;rsquo;s so weird that it is already my fourth week at HolidayCheck. Time is flying (I just realized that I have probably said this at the beginning of every week of my (adultish) life). Today, I worked through more of the Haskell Programming book. I went over pattern matching, case examples, and higher order functions. Though the book does a good job explaining the why&amp;rsquo;s and how&amp;rsquo;s, functional programming still feels quite unintuitive to me.</description>
    </item>
    
    <item>
      <title>Day 10: Analogies</title>
      <link>https://leahchung.netlify.com/posts/day10/</link>
      <pubDate>Wed, 03 Jul 2019 04:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day10/</guid>
      <description>This morning started off with a difficult and fun kata called the Elevator Problem (thank you to Kay for suggesting it!). The task is to transport 20 people in 60 seconds, going to the floor to pick them up and dropping them off on their desired floor. The problem and simulator can be found here. We passed the level where the building was 3 stories high, but could not figure out an algorithm quick enough for a building with 4 stories.</description>
    </item>
    
    <item>
      <title>Day 9: Heartbeats</title>
      <link>https://leahchung.netlify.com/posts/day9/</link>
      <pubDate>Tue, 02 Jul 2019 04:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day9/</guid>
      <description>This morning started off with a difficult coding kata called &amp;ldquo;Double Cola.&amp;rdquo; Given a list of people in line for a vending machine, determine who buys the n&amp;lsquo;th cola under the condition that every time a person drinks a cola, they are doubled (cloned) and these clones move to the end of the line. Our initial solution is to keep popping off and pushing onto the queue of people, but this is not an efficient solution (especially for large n values, this broke Markus&amp;rsquo;s tddbin ðŸ˜µ).</description>
    </item>
    
    <item>
      <title>Day 8: (Only Sometimes) Go With Your Instinct</title>
      <link>https://leahchung.netlify.com/posts/day8/</link>
      <pubDate>Fri, 28 Jun 2019 16:30:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day8/</guid>
      <description>Today I worked on more Haskell. I also asked Sergii about the problem I shared in the previous post. As a reminder:
 6 / length [1, 2, 3] 
does not work But, for whatever reason (which we now know),
6 `quot` length [1, 2, 3]
works just fine. The length function returns an Int, but it turns out that the &amp;lsquo;/&amp;rsquo; operator only works on the &amp;lsquo;Fractional&amp;rsquo; typeclass, of which &amp;lsquo;Int&amp;rsquo; is not an instance.</description>
    </item>
    
    <item>
      <title>Day 7: Getting acquianted with Haskell</title>
      <link>https://leahchung.netlify.com/posts/day7/</link>
      <pubDate>Thu, 27 Jun 2019 15:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day7/</guid>
      <description>I&amp;rsquo;d like to start off by apologizing for the short blog post. I&amp;rsquo;ve been learning a lot of basics with Haskell so I dont have many interesting, noteworthy insights save the ones to follow. Enjoy ðŸ˜ƒ Today, I completed 3 chapters of the Haskell Book. This book is written for absolute beginners, not only to Haskell but also to programming in general. This really forced me to get into the &amp;ldquo;wearing the white belt&amp;rdquo; mindset, because I did not want to skim any part with the chances of skipping over something important for Haskell.</description>
    </item>
    
    <item>
      <title>Day 6: Sweatshop</title>
      <link>https://leahchung.netlify.com/posts/day6/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day6/</guid>
      <description>Today really flew by. My mornings always seem over in the blink of an eye because I have my apprenticeship daily and the morning Kata. But today, I had two meetings after the Kata. The first meeting was with Markus to discuss the RSS feed for his blog and try to fix it (to no avail). The second meeting was also with Markus to discuss our plans for the friday talks.</description>
    </item>
    
    <item>
      <title>How to: Implement an RSS feed with Hugo</title>
      <link>https://leahchung.netlify.com/posts/rss_howto/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/rss_howto/</guid>
      <description>Here is a guide to help you add an RSS feed to your Hugo blog. 1. Edit the config.toml file: a. Make sure the baseURL is valid (e.g. &#34;https://leahchung.netlify.com&#34;)
b. Add the following lines:
 [outputs] home = [ &#34;RSS&#34;, &#34;HTML&#34;]
[outputFormats] [outputFormats.RSS] mediatype = &#34;application/rss&#34; baseName = &#34;rss&#34;  2. Edit the header.html file. a. Add the following line:  &amp;lt;link href=&#34;{{ .RSSLink }}&#34; rel=&#34;alternate&#34; type=&#34;application/rss+xml&#34; title=&#34;{{ .Site.Title }}&#34; /&amp;gt;</description>
    </item>
    
    <item>
      <title>Day 5: Software Crafter and Haskell Programming</title>
      <link>https://leahchung.netlify.com/posts/day5/</link>
      <pubDate>Mon, 24 Jun 2019 15:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day5/</guid>
      <description>Today I started reading The Software [Crafter] by Sandro Mancuso. Something that I find really interesting is the fact that &#34;seniority&#34; was measured by how incomprehensible one could make their code. If people did not understand some code, they immediately attributed it to the author&#39;s skill or wit. Equipped with this mindset, Sandro was very eager to please and impress his manager Namur when he started at a new company on a new team.</description>
    </item>
    
    <item>
      <title>Day 4: FINALLY!!</title>
      <link>https://leahchung.netlify.com/posts/day4md/</link>
      <pubDate>Fri, 21 Jun 2019 15:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day4md/</guid>
      <description>The title of this blog post does not refer to my feelings about this week being over. It refers to my feelings about successfully setting up the RSS for my blog (Thank you to my PPM Alvaro for suggesting better blog post titles. Your suggestion was well-received). Today:
After trying many methods to make my RSS feed link valid, I finally (FINALLY!) came to the solution which was in my config.</description>
    </item>
    
    <item>
      <title>Day 3: Piling things onto my TODO list</title>
      <link>https://leahchung.netlify.com/posts/day3/</link>
      <pubDate>Wed, 19 Jun 2019 15:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/day3/</guid>
      <description>My main focus today was to work on my blog. I deployed it to netlify yesterday (thank you to the former/current apprentice(s) for the recommendation), but it was a very simply blog theme. Today I worked on making it prettier :). I also met with my mentor, Peri, today. We went over my self-assessment and starting talking about my areas of focus for the next two months. My first area of concern is tooling.</description>
    </item>
    
    <item>
      <title>Days 1 &amp; 2</title>
      <link>https://leahchung.netlify.com/posts/my-first-post/</link>
      <pubDate>Tue, 18 Jun 2019 15:50:23 +0200</pubDate>
      
      <guid>https://leahchung.netlify.com/posts/my-first-post/</guid>
      <description>My first couple of days at HolidayCheck went really well, my first impression of the company was really great! Upon arrival at HolidayCheck, I was greeted by current and former software engineer apprentices. After short introductions, I was shown to my desk. My equipment was all set, and I even recieved some gifts from the company! I was then introduced to everyone that Peri and I could find. There are many people and many names.</description>
    </item>
    
  </channel>
</rss>
